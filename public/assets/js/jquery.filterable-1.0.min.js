/*
(c) 2008, Joern Schou-Rode <jsr@malamute.dk>

This work ‘as-is’ we provide.
No warranty, express or implied.
We’ve done our best,
to debug and test.
Liability for damages denied.

Permission is granted hereby,
to copy, share, and modify.
Use as is fit,
free or for profit.
On this notice these rights rely.
*/

(function($) {
    // Extend all jQuery objects with the filterable method.
    $.fn.filterable = function(options) {
        var o = $.extend({}, $.fn.filterable.defaults, options);

        return this.each(function() {
            var target = $(this);

            // Define the filtering function.
            var fn = function() {
                // No point in sorting hidden elements.  That's for babies.
                if(!target.is(':visible'))
                    return;

                // Take our target out of the document so we don't trigger
                // 8 million fucking reflows when we type the first thing in
                // the search box.
                var parentNode = target[0].parentNode;
                var nextSibling = target[0].nextSibling;

                parentNode.removeChild(target[0]);
                var reinserter = function() {
                    if(nextSibling) {
                        parentNode.insertBefore(target[0], nextSibling);
                    } else {
                        parentNode.appendChild(target[0]);
                    }
                };

                // Find the matching rows, and hide the others.
                var query = $(o.searchSelector).val().toLowerCase();
                target.find(o.affects).each(function() {
                    var item = $(this);
                    if (item.text().toLowerCase().indexOf(query) >= 0) {
                        if(o.smartShow == '' || item[0].className.indexOf(o.smartShow) == -1) {
                            item.css({'display': o.displayType});
                        }
                    } else {
                        item.css({'display': 'none'});
                    }
                });

                // Put our shit back into the document flow.
                reinserter();
            };

            // Attach the function to the input text field (onKeyUp).
            $(o.searchSelector).keyup(function() {
                var timeout = $.data(target, 'inputTimeout');

                // If there's a timeout already, kill it and restart it.
                if(typeof(timeout) != "undefined") {
                    clearTimeout(timeout);
                }

                // Set a timeout to trigger the actual search filtering.
                timeout = setTimeout(fn, o.inputTimeout);
                $.data(target, 'inputTimeout', timeout);
            });
        });
    };

    // Declare default options.
    $.fn.filterable.defaults = {
        affects: '> *',
        searchSelector: '#search',
        inputTimeout: 500,
        displayType: 'block',
        smartShow: ''
    };
})(jQuery);
