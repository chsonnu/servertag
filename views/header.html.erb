<!DOCTYPE HTML>
<html>
    <!-- Header -->
    <head>
        <link rel="stylesheet" type="text/css" href="/assets/bootstrap/css/bootstrap.min.css" />

        <script type="text/javascript" src="/assets/js/jquery-1.7.1.min.js"></script>
        <script type="text/javascript" src="/assets/bootstrap/js/bootstrap.min.js"></script>
        <script type="text/javascript" src="/assets/js/jquery.dataTables.min.js"></script>
        <script type="text/javascript" charset="utf-8">
$(document).ready(function() {
    // ************ dataTables
    // Styling
    $.fn.dataTableExt.oStdClasses.sFilter = "dataTables_filter pull-left";
    // Allows us to disable pagination 
    $.fn.dataTableExt.oPagination.none = {
        fnInit: function(){},
        fnUpdate: function() {
            $('.dataTables_length').hide();
            $('.dataTables_info').hide();
            $('.dataTables_paginate').hide();
        }
    };
    // Initialize table
    $('.servertag-dataTable').dataTable({
        "bJQueryUI": false,
        // Custom pagination type defined above
        "sPaginationType": "none",
        // Override some text
        "oLanguage": {
            "sSearch": "",
            "sZeroRecords": "No matches"
        }
    });
    // More styling (needs to be done after table init)
    $('.dataTables_filter>input').attr('placeholder', 'Start typing to filter...');
    $('.checkbox-cell').attr('style', 'width: 12px;');

    // *********** Multi-select on table rows
    // Callback to check all row boxes when the header box is checked
    $('.servertag-dataTable th>input').change(function() {
        $('td>input').prop('checked', $('th>input').prop('checked'));
    });

    // *********** Callback assignments
    $('#add-tags-btn').click(function() {addTagsModalOpen();});
    $('#add-tags-submit').click(function() {addTagsModalSubmit();});
    $('#add-tags-modal form').submit(function() {addTagsModalSubmit();});
    $('#remove-tags-btn').click(function() {removeTagsModalOpen();});
    $('#remove-tags-submit').click(function() {removeTagsModalSubmit();});
    $('#remove-tags-modal form').submit(function() {removeTagsModalSubmit();});
});

// *********** Library
// Finds out which hosts are checked
function checkedHosts() {
    var hosts = new Array();
    $('input.servertag-host-checkbox:checked')
        .closest('tr')
        .each(function() {
            hosts.push($(this).attr('servertag-hostname'))
        });
    return hosts;
}

// Returns the tags that the user typed in the given text box
function tagsInBox(box) {
    return box
        .val()
        .split(' ');
}

// Returns all the tags we know about, as an array of strings.
function allTags() {
    var tags = [];
    $('.servertag-tag').each(function(){
        tags.push($(this).attr('servertag-tagname'));
    });
    return tags;
}

// Given a table cell (of the type .servertag-tag-cell), returns the
// list of tags present in it, as strings.
function extractTagsFromCell(cell) {
    return $(cell)
        .children('span.servertag-tag')
        .map(function(){
            return $(this).attr('servertag-tagname').toString();
            })
        .toArray();
}

// Turns the given array of tag objects into an array of <span>
// elements for display in our table.
//
// Each tag object should have a 'name', 'exclusive', and 'just_added'
// attribute.
function tagToSpan(tag) {
    var selector = 'div#tag-templates>span';
    if (tag.exclusive) {selector += '.servertag-tag-exclusive';}
    if (tag.just_added) {selector += '.servertag-tag-just-added';}

    return $(selector)
        .first()
        .clone()
        .removeClass('servertag-tag-template')
        .attr('servertag-tagname', tag.name)
        .text(tag.name);
}

// Adds the given tags to the given hosts with an Ajax call and
// sets a callback to update the table accordingly.
function addTagsToHosts(hosts, new_tags) {
    $.ajax({
        url: "ajax/add_tags",
        type: "POST",
        data: {hosts: hosts, tags: new_tags},
        dataType: "json"})
        .done(updateTagTable);
}

// Removes the given tags from the given hosts with an Ajax call and
// sets a callback to update the table accordingly.
function removeTagsFromHosts(hosts, tags) {
    $.ajax({
        url: "ajax/remove_tags",
        type: "POST",
        data: {hosts: hosts, tags: tags},
        dataType: "json"})
        .done(updateTagTable);
}

// Callback to update the tag table once our AJAX request finishes.
//
// Receives the data that was returned from the server.
function updateTagTable(data) {
    $(data.results).each(function(){
        var cell = $('.servertag-host-row[servertag-hostname="' + this.hostname + '"]>.servertag-tag-cell')
            .empty();

        $(this.tags)
            .each(function(){
                tagToSpan(this)
                    .appendTo(cell);
                cell.append(' ');
                });
    });
}

// Called on a click of the "Add Tags" button. Opens the modal.
function addTagsModalOpen() {
    hosts = checkedHosts();
    if (hosts.length == 0) {
        $('#no-hosts-checked-alert').modal('show');
        return;
    }

    $('#add-tags-modal')
        .modal({keyboard: true})
        .on('shown', function(){$('#add-tags-modal :text').focus();})
        .modal('show');
    // Workaround for  Bootstrap bug where 'shown' callback wasn't triggering
    // until you hovered over a button
    $('#add-tags-submit').hover();
}

// Called on a click of the "Remove Tags" button. Opens the modal.
function removeTagsModalOpen() {
    hosts = checkedHosts();
    if (hosts.length == 0) {
        $('#no-hosts-checked-alert').modal('show');
        return;
    }

    $('#remove-tags-modal')
        .modal({keyboard: true})
        .on('shown', function(){$('#remove-tags-modal :text').focus();})
        .modal('show');
    $('#remove-tags-modal :text')
        .typeahead({source: allTags()});
    // Workaround for  Bootstrap bug where 'shown' callback wasn't triggering
    // until you hovered over a button
    $('#remove-tags-submit').hover();
}

// Called when "Add Tags" modal is submitted. Adds the tags via Ajax.
function addTagsModalSubmit() {
    hosts = checkedHosts();
    tags = tagsInBox($('#add-tags-modal :text'));
    if (tags.length == 0) {
        $('#no-tags-specified-alert').show();
        return;
    }
    $('#add-tags-modal :text').val('');

    addTagsToHosts(hosts, tags);
    $('#add-tags-modal').modal('hide');
}

// Called when "Remove Tags" modal is submitted. Removes the tags via Ajax.
function removeTagsModalSubmit() {
    hosts = checkedHosts();
    tags = tagsInBox($('#remove-tags-modal :text'));
    if (tags.length == 0) {
        $('#no-tags-specified-alert').show();
        return;
    }
    $('#remove-tags-modal :text').val('');

    removeTagsFromHosts(hosts, tags);
    $('#remove-tags-modal').modal('hide');
}
    </script>

    </head>
